2022-04-21 11:05:43 info: ------------------------------------------------------
2022-04-21 11:05:43 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-04-21 11:05:43 info: ------------------------------------------------------
2022-04-21 11:05:49 info: All unit tests passed.
2022-04-21 11:05:54 error: *** ESLint Report ***

ex1-doubleEvenNumbers.test.js
  35:1  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-04-21 11:18:17 info: Disclaimer turned off
2022-04-21 11:30:36 info: ------------------------------------------------------
2022-04-21 11:30:36 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2022-04-21 11:30:36 info: ------------------------------------------------------
2022-04-21 11:30:41 info: All unit tests passed.
2022-04-21 11:30:47 info: All steps were completed successfully
2022-04-21 11:44:08 info: -------------------------------------------------
2022-04-21 11:44:08 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-04-21 11:44:08 info: -------------------------------------------------
2022-04-21 11:44:13 error: *** Unit Test Error Report ***

console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)

  console.log
    €187.5

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:44:9)

  console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)



Command failed: npx jest ex2-mondaysWorth.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (2 ms)
    × should compute the earnings as a formatted Euro amount (7 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: "€187.5"

      55 |     const result = computeEarnings(mondayTasks, hourlyRate);
      56 |     const expected = '€187.50';
    > 57 |     expect(result).toBe(expected);
         |                    ^
      58 |   });
      59 | });
      60 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:57:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.961 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2022-04-21 11:47:40 info: -------------------------------------------------
2022-04-21 11:47:40 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-04-21 11:47:40 info: -------------------------------------------------
2022-04-21 11:47:45 error: *** Unit Test Error Report ***

console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)

  console.log
    '€187.5'

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:44:9)

  console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)



Command failed: npx jest ex2-mondaysWorth.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (3 ms)
    × should compute the earnings as a formatted Euro amount (7 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: "'€187.5'"

      55 |     const result = computeEarnings(mondayTasks, hourlyRate);
      56 |     const expected = '€187.50';
    > 57 |     expect(result).toBe(expected);
         |                    ^
      58 |   });
      59 | });
      60 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:57:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.915 s, estimated 1 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2022-04-21 12:54:49 info: -------------------------------------------------
2022-04-21 12:54:49 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-04-21 12:54:49 info: -------------------------------------------------
2022-04-21 12:54:52 error: *** Unit Test Error Report ***

console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)

  console.log
    '€187.50'

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:44:9)

  console.log
    450

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:40:11)



Command failed: npx jest ex2-mondaysWorth.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (1 ms)
    × should compute the earnings as a formatted Euro amount (5 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: "'€187.50'"

      55 |     const result = computeEarnings(mondayTasks, hourlyRate);
      56 |     const expected = '€187.50';
    > 57 |     expect(result).toBe(expected);
         |                    ^
      58 |     console.log(result);
      59 |     console.log(expected);
      60 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:57:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.648 s, estimated 1 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2022-04-21 12:57:37 info: -------------------------------------------------
2022-04-21 12:57:37 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2022-04-21 12:57:37 info: -------------------------------------------------
2022-04-21 12:57:40 info: All unit tests passed.
2022-04-21 12:57:45 info: All steps were completed successfully
2022-04-21 01:23:25 info: ----------------------------------------
2022-04-21 01:23:25 info: >>> Running Unit Test `ex2-dogYears` <<<
2022-04-21 01:23:25 info: ----------------------------------------
2022-04-21 01:23:29 error: *** Unit Test Error Report ***

✕ calculateDogAge should have all TODO comments removed
✕ calculateDogAge should take a single parameter
✕ calculateDogAge should give 7 dog years for 1 human year
  Expected: Your doggie is 7 years old in dog years!
  Received: undefined
✕ calculateDogAge should give 14 dog years for 2 human years
  Expected: Your doggie is 14 years old in dog years!
  Received: undefined
✕ calculateDogAge give 21 dog years for 3 human years
  Expected: Your doggie is 21 years old in dog years!
  Received: undefined


Command failed: npx jest ex2-dogYears.test.js --colors --reporters="D:\hyf\homework-class37\test-runner\CustomReporter.js"
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
2022-04-21 01:24:03 info: -------------------------------------------------
2022-04-21 01:24:03 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 01:24:03 info: -------------------------------------------------
2022-04-21 01:24:06 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    × should take two parameters (3 ms)
    × should not modify the original `fruitBasket` array
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should take two parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      43 |   test('should take two parameters', () => {
      44 |     // TODO replace next line with your code
    > 45 |     expect(false).toBe(true);
         |                   ^
      46 |   });
      47 |
      48 |   test('should not modify the original `fruitBasket` array', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:45:19)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      50 |     const originalFruitBasketContents = [...fruitBasket];
      51 |     // TODO replace next line with your code
    > 52 |     expect(false).toBe(true);
         |                   ^
      53 |   });
      54 |
      55 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:52:19)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      55 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      56 |     // TODO replace next line with your code
    > 57 |     expect(false).toBe(true);
         |                   ^
      58 |   });
      59 | });
      60 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:57:19)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 3 total
Snapshots:   0 total
Time:        0.642 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 01:24:08 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  50:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars

✖ 2 problems (2 errors, 0 warnings)


2022-04-21 01:34:55 info: -------------------------------------------------
2022-04-21 01:34:55 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 01:34:55 info: -------------------------------------------------
2022-04-21 01:34:58 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (2 ms)
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(false).toBe(true);
         |                   ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:19)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(false).toBe(true);
         |                   ^
      59 |   });
      60 | });
      61 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:19)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.61 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 01:35:00 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  51:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars

✖ 2 problems (2 errors, 0 warnings)


2022-04-21 01:42:35 info: -------------------------------------------------
2022-04-21 01:42:35 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 01:42:35 info: -------------------------------------------------
2022-04-21 01:42:38 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (4 ms)
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket(fruitBasket)).toBe(fruitBasket);
         |                                              ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:46)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(false).toBe(true);
         |                   ^
      59 |   });
      60 | });
      61 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:19)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.614 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 01:42:40 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  51:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars

✖ 2 problems (2 errors, 0 warnings)


2022-04-21 01:43:33 info: -------------------------------------------------
2022-04-21 01:43:33 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 01:43:33 info: -------------------------------------------------
2022-04-21 01:43:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.687 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 01:43:38 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:05:33 info: -------------------------------------------------
2022-04-21 02:05:33 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:05:33 info: -------------------------------------------------
2022-04-21 02:05:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.72 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:05:39 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:05:41 error: *** Spell Checker Report ***

ex3-lemonAllergy.test.js:58:12 - Unknown word (fsanitize)

2022-04-21 02:15:27 info: -------------------------------------------------
2022-04-21 02:15:27 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:15:27 info: -------------------------------------------------
2022-04-21 02:15:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.707 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:15:32 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:17:00 info: -------------------------------------------------
2022-04-21 02:17:00 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:17:00 info: -------------------------------------------------
2022-04-21 02:17:03 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (2 ms)
    × should not modify the original `fruitBasket` array (4 ms)
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket(fruitBasket)).toBe(fruitBasket);
         |                                              ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:46)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    ReferenceError: fruits is not defined

      57 |     // TODO replace next line with your code
      58 |     expect(sanitizeFruitBasket(fruitBasket, 'lemon')).toBe(
    > 59 |       sanitizeFruitBasket(fruits, allergenFruit)
         |                           ^
      60 |     );
      61 |   });
      62 | });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:59:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.662 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:17:05 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  51:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars
  59:27  error  'fruits' is not defined                                           no-undef
  59:35  error  'allergenFruit' is not defined                                    no-undef

✖ 4 problems (4 errors, 0 warnings)


2022-04-21 02:17:46 info: -------------------------------------------------
2022-04-21 02:17:46 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:17:46 info: -------------------------------------------------
2022-04-21 02:17:49 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (3 ms)
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket(fruitBasket)).toBe(fruitBasket);
         |                                              ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:46)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    ReferenceError: fruits is not defined

      57 |     // TODO replace next line with your code
      58 |     expect(sanitizeFruitBasket(fruitBasket, 'lemon')).toBe(
    > 59 |       sanitizeFruitBasket(fruits, allergenFruit)
         |                           ^
      60 |     );
      61 |   });
      62 | });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:59:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.545 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:17:51 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  51:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars
  59:27  error  'fruits' is not defined                                           no-undef
  59:35  error  'allergenFruit' is not defined                                    no-undef

✖ 4 problems (4 errors, 0 warnings)


2022-04-21 02:18:26 info: -------------------------------------------------
2022-04-21 02:18:26 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:18:26 info: -------------------------------------------------
2022-04-21 02:18:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.683 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:18:31 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:21:29 info: -------------------------------------------------
2022-04-21 02:21:29 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:21:29 info: -------------------------------------------------
2022-04-21 02:21:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.682 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:21:35 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:23:20 info: -------------------------------------------------
2022-04-21 02:23:20 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:23:20 info: -------------------------------------------------
2022-04-21 02:23:22 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should return a new array that does not include the unwanted `lemon` (3 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.638 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:23:25 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:24:13 info: -------------------------------------------------
2022-04-21 02:24:13 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:24:13 info: -------------------------------------------------
2022-04-21 02:24:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   /*test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.675 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:24:18 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:25:56 info: -------------------------------------------------
2022-04-21 02:25:56 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:25:56 info: -------------------------------------------------
2022-04-21 02:25:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (63:0)

      61 |   });
      62 | }); */
    > 63 |
         | ^

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.695 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:26:01 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  63:1  error  Parsing error: Unexpected token

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:30:03 info: -------------------------------------------------
2022-04-21 02:30:03 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:30:03 info: -------------------------------------------------
2022-04-21 02:30:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: D:\HYF\Homework-class37\1-JavaScript\Week4\homework\ex3-lemonAllergy.test.js: Unexpected token (53:31)

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket[...fruitBasket]).toBe(fruitBasket);
         |                                ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Parser._raise (node_modules/@babel/parser/src/parser/error.js:147:45)
      at Parser.raiseWithData (node_modules/@babel/parser/src/parser/error.js:142:17)
      at Parser.raise (node_modules/@babel/parser/src/parser/error.js:91:17)
      at Parser.unexpected (node_modules/@babel/parser/src/parser/util.js:190:16)
      at Parser.parseExprAtom (node_modules/@babel/parser/src/parser/expression.js:1323:22)
      at Parser.parseExprSubscripts (node_modules/@babel/parser/src/parser/expression.js:668:23)
      at Parser.parseUpdate (node_modules/@babel/parser/src/parser/expression.js:648:21)
      at Parser.parseMaybeUnary (node_modules/@babel/parser/src/parser/expression.js:619:23)
      at Parser.parseMaybeUnaryOrPrivate (node_modules/@babel/parser/src/parser/expression.js:372:14)
      at Parser.parseExprOps (node_modules/@babel/parser/src/parser/expression.js:382:23)

Test Suites: 1 failed, 1 total
Tests:       0 total
Snapshots:   0 total
Time:        0.717 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:30:08 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  53:32  error  Parsing error: Unexpected token ..

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:33:13 info: -------------------------------------------------
2022-04-21 02:33:13 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:33:13 info: -------------------------------------------------
2022-04-21 02:33:16 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (3 ms)
    × should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket(fruitBasket)).toBe(originalFruitBasketContents);
         |                                              ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:46)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.634 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:33:18 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:34:20 info: -------------------------------------------------
2022-04-21 02:34:20 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:34:20 info: -------------------------------------------------
2022-04-21 02:34:23 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (3 ms)
    × should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(sanitizeFruitBasket(fruitBasket)).toBe(fruitBasket);
         |                                              ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:46)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.64 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:34:25 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
   3:9   error  'includes' is assigned a value but never used                     no-unused-vars
  51:11  error  'originalFruitBasketContents' is assigned a value but never used  no-unused-vars

✖ 2 problems (2 errors, 0 warnings)


2022-04-21 02:35:04 info: -------------------------------------------------
2022-04-21 02:35:04 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:35:04 info: -------------------------------------------------
2022-04-21 02:35:07 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (2 ms)
    × should not modify the original `fruitBasket` array (4 ms)
    × should return a new array that does not include the unwanted `lemon` (1 ms)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(originalFruitBasketContents).toBe(fruitBasket);
         |                                         ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:41)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.635 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:35:09 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:36:32 info: -------------------------------------------------
2022-04-21 02:36:32 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:36:32 info: -------------------------------------------------
2022-04-21 02:36:35 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (1 ms)
    × should not modify the original `fruitBasket` array (3 ms)
    × should return a new array that does not include the unwanted `lemon`

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      51 |     const originalFruitBasketContents = [...fruitBasket];
      52 |     // TODO replace next line with your code
    > 53 |     expect(fruitBasket).toBe(originalFruitBasketContents);
         |                         ^
      54 |   });
      55 |
      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:53:25)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.639 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:36:37 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:39:51 info: -------------------------------------------------
2022-04-21 02:39:51 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:39:51 info: -------------------------------------------------
2022-04-21 02:39:54 error: *** Unit Test Error Report ***

console.log
    [ 'apple', 'grapefruit', 'banana', 'watermelon' ]

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:39:9)



Command failed: npx jest ex3-lemonAllergy.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (2 ms)
    √ should not modify the original `fruitBasket` array (1 ms)
    × should return a new array that does not include the unwanted `lemon` (3 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "grapefruit", "banana", "watermelon"]
    Received: serializes to the same string

      56 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      57 |     // TODO replace next line with your code
    > 58 |     expect(['apple', 'grapefruit', 'banana', 'watermelon']).toBe(
         |                                                             ^
      59 |       sanitizeFruitBasket(fruitBasket, 'lemon')
      60 |     );
      61 |   });

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:58:61)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.636 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2022-04-21 02:39:56 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-04-21 02:41:07 info: -------------------------------------------------
2022-04-21 02:41:07 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2022-04-21 02:41:07 info: -------------------------------------------------
2022-04-21 02:41:10 info: All unit tests passed.
2022-04-21 02:41:12 error: *** ESLint Report ***

ex3-lemonAllergy.test.js
  3:9  error  'includes' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


